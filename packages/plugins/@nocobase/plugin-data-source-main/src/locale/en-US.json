{
  "field-name-exists": "Field name \"{{name}}\" already exists in collection \"{{collectionName}}\"",
  "field-is-depended-on-by-other": "Can not delete field \"{{fieldName}}\" in \"{{fieldCollectionName}}\", it is used by field \"{{dependedFieldName}}\" in \"{{dependedFieldCollectionName}}\" as \"{{dependedFieldAs}}\"",
  "string.base": "{{label}} must be a string",
  "string.empty": "{{label}} is not allowed to be empty",
  "string.min": "{{label}} length must be at least {{limit}} characters long",
  "string.max": "{{label}} length must be less than or equal to {{limit}} characters long",
  "string.length": "{{label}} length must be {{limit}} characters long",
  "string.alphanum": "{{label}} must only contain alpha-numeric characters",
  "string.token": "{{label}} must only contain alpha-numeric and underscore characters",
  "string.regex": "{{label}} with value {{value}} fails to match the required pattern",
  "string.email": "{{label}} email address doesnâ€™t meet the required format",
  "string.uri": "{{label}} must be a valid uri",
  "string.uriCustomScheme": "{{label}} must be a valid uri with a scheme matching the {{scheme}} pattern",
  "string.uriRelativeOnly": "{{label}} must be a valid relative uri",
  "string.isoDate": "{{label}} must be a valid ISO 8601 date",
  "string.guid": "{{label}} must be a valid UUID",
  "string.hex": "{{label}} must only contain hexadecimal characters",
  "string.hostname": "{{label}} must be a valid hostname",
  "string.lowercase": "{{label}} must only contain lowercase characters",
  "string.uppercase": "{{label}} must only contain uppercase characters",
  "string.trim": "{{label}} must not have leading or trailing whitespace",
  "string.creditCard": "{{label}} must be a credit card",
  "string.pattern.base": "{{label}} with value \"{{value}}\" fails to match the required pattern: {{regex}}",
  "string.pattern.name": "{{label}} with value \"{{value}}\" fails to match the {{name}} pattern",
  "string.pattern.invert.base": "{{label}} with value \"{{value}}\" matches the inverted pattern",
  "string.pattern.invert.name": "{{label}} with value \"{{value}}\" matches the inverted {{name}} pattern",
  "any.required": "{{label}} is required",
  "number.base": "{{label}} must be a number",
  "number.min": "{{label}} must be greater than or equal to {{limit}}",
  "number.max": "{{label}} must be less than or equal to {{limit}}",
  "number.less": "{{label}} must be less than {{limit}}",
  "number.greater": "{{label}} must be greater than {{limit}}",
  "number.float": "{{label}} must be a float or double",
  "number.integer": "{{label}} must be an integer",
  "number.negative": "{{label}} must be a negative number",
  "number.positive": "{{label}} must be a positive number",
  "number.precision": "{{label}} must not have more than {{limit}} decimal places",
  "number.multiple": "{{label}} must be a multiple of {{multiple}}",
  "number.port": "{{label}} must be a valid port",
  "number.unsafe": "{{label}} must be a safe number",
  "date.base": "{{label}} must be a valid date",
  "date.format": "{{label}} must be in {{format}} format",
  "date.greater": "{{label}} must be greater than {{limit}}",
  "date.less": "{{label}} must be less than {{limit}}",
  "date.max": "{{label}} must be less than or equal to {{limit}}",
  "date.min": "{{label}} must be greater than or equal to {{limit}}"
}
